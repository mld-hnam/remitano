{"version":3,"file":"static/js/379.fcb48e10.chunk.js","mappings":"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","sources":["libs/common/generalErrorBoundry.jsx","layouts/main/component/privateHeader.jsx","layouts/main/component/publicHeader.jsx","layouts/main/index.jsx","modules/share/index.jsx"],"sourcesContent":["import { Button } from \"antd\";\nimport DefaultError from \"@/components/DefaultError\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nfunction ErrorFallback({ error, resetErrorBoundary }) {\n  const resetError = () => {\n    resetErrorBoundary();\n    window.location.reload();\n  };\n\n  return (\n    <DefaultError\n      title=\"Please refresh page\"\n      content={error.message}\n      actions={\n        <Button type=\"primary\" ghost size={40} onClick={resetError}>\n          Refresh page\n        </Button>\n      }\n    />\n  );\n}\n\nexport default function GeneralErrorBoundry({ children }) {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>{children}</ErrorBoundary>\n  );\n}\n","import { Button, Space, Typography } from \"antd\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useNavigate } from \"react-router\";\n\nexport default function PrivateHeader() {\n  const { logout, profile } = useAuth();\n  const navigate = useNavigate();\n  const onSubmit = async () => {\n    try {\n      logout();\n    } catch (error) {}\n  };\n  const handleRedirectShare = () => {\n    navigate(\"/share\");\n  };\n  return (\n    <Space>\n      <Typography>\n        <FormattedMessage id=\"common_welcome\" />\n        {profile?.name}\n      </Typography>\n      <Button\n        block\n        size=\"large\"\n        htmlType=\"submit\"\n        onClick={handleRedirectShare}\n        data-testid=\"login-btn\"\n      >\n        <FormattedMessage id=\"action.shareMovie\" />\n      </Button>\n      <Button\n        block\n        size=\"large\"\n        htmlType=\"submit\"\n        onClick={onSubmit}\n        data-testid=\"login-btn\"\n      >\n        <FormattedMessage id=\"action.logout\" />\n      </Button>\n    </Space>\n  );\n}\n","import { Button, Form, Input } from \"antd\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport React, { useEffect } from \"react\";\n\nimport styles from \"./publicHead.less\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nexport default function PublicHeader() {\n  const { formatMessage } = useIntl();\n  const [form] = Form.useForm();\n  const { setUser } = useAuth();\n\n  useEffect(() => {});\n\n  const onSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      setUser(values);\n    } catch (error) {}\n  };\n\n  return (\n    <div className={styles.header}>\n      <Form form={form} colon={false} layout=\"inline\">\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              whitespace: true,\n              message: formatMessage({\n                id: \"email.required\",\n              }),\n            },\n            {\n              required: true,\n              type: \"email\",\n              message: \"\",\n            },\n          ]}\n        >\n          <Input\n            name=\"email\"\n            size=\"large\"\n            placeholder={formatMessage({ id: \"common_email\" })}\n            data-testid=\"common_email\"\n            autoFocus\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              whitespace: true,\n              message: \"\",\n            },\n          ]}\n        >\n          <Input.Password\n            size=\"large\"\n            name=\"password\"\n            placeholder={formatMessage({ id: \"common_password\" })}\n            data-testid=\"password\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            block\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n            onClick={onSubmit}\n            data-testid=\"login-btn\"\n          >\n            <FormattedMessage id=\"action.login/register\" />\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import { Layout, Space } from \"antd\";\nimport React, { Suspense } from \"react\";\n\nimport { Footer } from \"antd/lib/layout/layout\";\nimport GeneralErrorBoundry from \"@/libs/common/generalErrorBoundry\";\nimport { HomeFilled } from \"@ant-design/icons\";\nimport PageLoading from \"@/components/PageLoading\";\nimport PrivateHeader from \"./component/privateHeader\";\nimport PublicHeader from \"./component/publicHeader\";\nimport styles from \"./style.less\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nconst { Header, Content } = Layout;\n\nconst MainLayout = ({ children }) => {\n  const { profile } = useAuth();\n  return (\n    <Layout>\n      <Header\n        style={{\n          background: \"#fff\",\n          height: \"72px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          borderBottom: \"1px solid #000\",\n          alignItems: \"center\",\n        }}\n        className={styles.siteLayoutBackground}\n      >\n        <Space className=\"logo\" style={{ lineHeight: 0 }}>\n          <HomeFilled style={{ fontSize: 32 }} />\n          <span\n            style={{\n              fontSize: 32,\n              textTransform: \"uppercase\",\n              paddingLeft: 10,\n            }}\n          >\n            Funny Movie\n          </span>\n        </Space>\n        {profile ? <PrivateHeader /> : <PublicHeader />}\n      </Header>\n      <Layout>\n        <Layout style={{ padding: \"0 24px 24px\" }}>\n          <Content\n            style={{\n              margin: 0,\n              padding: 50,\n              minHeight: \"100vh\",\n            }}\n          >\n            <GeneralErrorBoundry>\n              <Suspense fallback={<PageLoading />}>{children}</Suspense>\n            </GeneralErrorBoundry>\n          </Content>\n          <Footer style={{ textAlign: \"center\", color: \"#999\" }}>\n            Copyright Â© 2022\n          </Footer>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default MainLayout;\n","import { Button, Form, Input } from \"antd\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport MainLayout from \"@/layouts/main\";\nimport React from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useNavigate } from \"react-router\";\nimport { youtubeLinkParser } from \"@/utils/utils\";\n\nexport default function SharedForm() {\n  const { post, setPost, profile } = useAuth();\n  const { formatMessage } = useIntl();\n  const [form] = Form.useForm();\n\n  const navigate = useNavigate();\n  const onSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const item = {\n        url: values.url,\n        mime: \"video/mp4\",\n        title: values.url,\n        sharedBy: profile.email,\n        like: 0,\n        dislike: 0,\n        description:\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eaque quidem molestiae laborum cupiditate, libero natus! Aliquam ad mollitia in aperiam dolor, ea fugit? Exercitationem cum id delectus, commodi soluta sed!\",\n      };\n      setPost([...post, item]);\n      navigate(\"/\");\n    } catch (error) {}\n  };\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  return (\n    <MainLayout>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Form\n          {...layout}\n          form={form}\n          style={{\n            position: \"relative\",\n            width: \"600px\",\n            border: \"2px solid #000\",\n            padding: 32,\n          }}\n          colon={false}\n        >\n          <span\n            style={{\n              position: \"absolute\",\n              top: \"-16px\",\n              left: \"8px\",\n              backgroundColor: \"    #f0f2f5\",\n            }}\n          >\n            Share a Youtube movie\n          </span>\n          <Form.Item\n            label=\"Youtube Url:\"\n            name=\"url\"\n            rules={[\n              {\n                required: true,\n                whitespace: true,\n                message: formatMessage({\n                  id: \"url.required\",\n                }),\n              },\n            ]}\n          >\n            <Input size=\"large\" data-testid=\"common_url\" autoFocus />\n          </Form.Item>\n          <Form.Item label=\" \">\n            <Button\n              block\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n              onClick={onSubmit}\n              data-testid=\"login-btn\"\n            >\n              <FormattedMessage id=\"action.share\" />\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </MainLayout>\n  );\n}\n"],"names":["ErrorFallback","error","resetErrorBoundary","DefaultError","title","content","message","actions","type","ghost","size","onClick","window","location","reload","GeneralErrorBoundry","children","ErrorBoundary","FallbackComponent","PrivateHeader","useAuth","logout","profile","navigate","useNavigate","onSubmit","id","name","block","htmlType","PublicHeader","formatMessage","useIntl","Form","form","setUser","useEffect","validateFields","values","className","styles","colon","layout","rules","whitespace","required","placeholder","autoFocus","Header","Layout","Content","style","background","height","display","justifyContent","borderBottom","alignItems","lineHeight","HomeFilled","fontSize","textTransform","paddingLeft","padding","margin","minHeight","Suspense","fallback","PageLoading","textAlign","color","SharedForm","post","setPost","item","url","mime","sharedBy","email","like","dislike","description","labelCol","span","wrapperCol","position","width","border","top","left","backgroundColor","label"],"sourceRoot":""}